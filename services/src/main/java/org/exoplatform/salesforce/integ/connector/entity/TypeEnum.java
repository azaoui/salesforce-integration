/*
 * based on Salesforce DTO generated by camel-salesforce-maven-plugin
 * https://developer.salesforce.com/docs/atlas.en-us.api.meta/api/sforce_api_objects_feeditem.htm
 * 
 * 
 */
package org.exoplatform.salesforce.integ.connector.entity;

import org.codehaus.jackson.annotate.JsonCreator;
import org.codehaus.jackson.annotate.JsonValue;

/**
 * 

AdvancedTextPost—created when a user posts a group announcement.
AnnouncementPost—Not used.
ApprovalPost—generated when a user submits an approval.
BasicTemplateFeedItem—Not used.
CanvasPost—a post made by a canvas app posts on a feed.
CollaborationGroupCreated—generated when a user creates a public group.
CollaborationGroupUnarchived—Not used.
ContentPost—a post with an attached file.
CreatedRecordEvent—generated when a user creates a record from the publisher.
DashboardComponentAlert—generated when a dashboard metric or gauge exceeds a user-defined threshold.
DashboardComponentSnapshot—created when a user posts a dashboard snapshot on a feed.
LinkPost—a post with an attached URL.
PollPost—a poll posted on a feed.
ProfileSkillPost—generated when a skill is added to a user’s Chatter profile.
QuestionPost—generated when a user posts a question.
ReplyPost—generated when Chatter Answers posts a reply.
RypplePost—generated when a user creates a Thanks badge in Work.com.
TextPost—a direct text entry on a feed.
TrackedChange—a change or group of changes to a tracked field.
UserStatus—automatically generated when a user adds a post. Deprecated
 */
public enum TypeEnum {

    // TrackedChange
    TRACKEDCHANGE("TrackedChange"),
    // UserStatus
    USERSTATUS("UserStatus"),
    // TextPost
    TEXTPOST("TextPost"),
    // AdvancedTextPost
    ADVANCEDTEXTPOST("AdvancedTextPost"),
    // LinkPost
    LINKPOST("LinkPost"),
    // ContentPost
    CONTENTPOST("ContentPost"),
    // PollPost
    POLLPOST("PollPost"),
    // RypplePost
    RYPPLEPOST("RypplePost"),
    // ProfileSkillPost
    PROFILESKILLPOST("ProfileSkillPost"),
    // DashboardComponentSnapshot
    DASHBOARDCOMPONENTSNAPSHOT("DashboardComponentSnapshot"),
    // ApprovalPost
    APPROVALPOST("ApprovalPost"),
    // CaseCommentPost
    CASECOMMENTPOST("CaseCommentPost"),
    // ReplyPost
    REPLYPOST("ReplyPost"),
    // EmailMessageEvent
    EMAILMESSAGEEVENT("EmailMessageEvent"),
    // CallLogPost
    CALLLOGPOST("CallLogPost"),
    // ChangeStatusPost
    CHANGESTATUSPOST("ChangeStatusPost"),
    // AttachArticleEvent
    ATTACHARTICLEEVENT("AttachArticleEvent"),
    // MilestoneEvent
    MILESTONEEVENT("MilestoneEvent"),
    // ActivityEvent
    ACTIVITYEVENT("ActivityEvent"),
    // ChatTranscriptPost
    CHATTRANSCRIPTPOST("ChatTranscriptPost"),
    // CollaborationGroupCreated
    COLLABORATIONGROUPCREATED("CollaborationGroupCreated"),
    // CollaborationGroupUnarchived
    COLLABORATIONGROUPUNARCHIVED("CollaborationGroupUnarchived"),
    // SocialPost
    SOCIALPOST("SocialPost"),
    // QuestionPost
    QUESTIONPOST("QuestionPost"),
    // FacebookPost
    FACEBOOKPOST("FacebookPost"),
    // BasicTemplateFeedItem
    BASICTEMPLATEFEEDITEM("BasicTemplateFeedItem"),
    // CreateRecordEvent
    CREATERECORDEVENT("CreateRecordEvent"),
    // CanvasPost
    CANVASPOST("CanvasPost"),
    // AnnouncementPost
    ANNOUNCEMENTPOST("AnnouncementPost");

    final String value;

    private TypeEnum(String value) {
        this.value = value;
    }

    @JsonValue
    public String value() {
        return this.value;
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
        for (TypeEnum e : TypeEnum.values()) {
            if (e.value.equals(value)) {
                return e;
            }
        }
        throw new IllegalArgumentException(value);
    }

}